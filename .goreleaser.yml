# .goreleaser.yml
builds:
  # You can have multiple builds defined as a yaml list
  -
    # Binary name.
    # Can be a path (e.g. `bin/app`) to wrap the binary in a directory.
    # Default is the name of the project directory.
    binary: ecg

    # GOOS list to build for.
    # For more info refer to: https://golang.org/doc/install/source#environment
    # Defaults are darwin and linux.
    goos:
      - linux
      - darwin
      - windows

release:
  # Repo in which the release will be created.
  # Default is extracted from the origin remote URL or empty if its private hosted.
  # Note: it can only be one: either github, gitlab or gitea
  github:
    owner: p-rs
    name: eschargo

  # IDs of the archives to use.
  # Defaults to all.
  # ids:
  #   - foo
  #   - bar

  # If set to true, will not auto-publish the release.
  # Default is false.
  # draft: true

  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  # prerelease: auto

  # You can change the name of the release.
  # Default is `{{.Tag}}`
  name_template: "{{.ProjectName}}-v{{.Version}}"

  # You can disable this pipe in order to not upload any artifacts.
  # Defaults to false.
  # disable: true

  # You can add extra pre-existing files to the release.
  # The filename on the release will be the last part of the path (base). If
  # another file with the same name exists, the latest one found will be used.
  # Defaults to empty.
  # extra_files:
  #   - glob: ./path/to/file.txt
  #   - glob: ./glob/**/to/**/file/**/*
  #   - glob: ./glob/foo/to/bar/file/foobar/override_from_previous

brews:
  -
    # Name template of the recipe
    # Default to project name
    name: eschargo

    # IDs of the archives to use.
    # Defaults to all.
    # ids:
    # - foo
    # - bar

    # GOARM to specify which 32-bit arm version to use if there are multiple versions
    # from the build section. Brew formulas support atm only one 32-bit version.
    # Default is 6 for all artifacts or each id if there a multiple versions.
    # goarm: 6

    # NOTE: make sure the url_template, the token and given repo (github or gitlab) owner and name are from the
    # same kind. We will probably unify this in the next major version like it is done with scoop.

    # GitHub/GitLab repository to push the formula to
    # Gitea is not supported yet, but the support coming
    tap:
      owner: p-rs
      name: eschargo-homebrew-tap
      # Optionally a token can be provided, if it differs from the token provided to GoReleaser
      # token: "{{ secrets.GO_RELEASER_GITHUB_TOKEN }}"

    # Template for the url which is determined by the given Token (github or gitlab)
    # Default for github is "https://github.com/<repo_owner>/<repo_name>/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    # Default for gitlab is "https://gitlab.com/<repo_owner>/<repo_name>/uploads/{{ .ArtifactUploadHash }}/{{ .ArtifactName }}"
    url_template: "https://github.com/p-rs/eschargo/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

    # Allows you to set a custom download strategy. Note that you'll need
    # to implement the strategy and add it to your tap repository.
    # Example: https://docs.brew.sh/Formula-Cookbook#specifying-the-download-strategy-explicitly
    # Default is empty.
    # download_strategy: CurlDownloadStrategy.

    # Allows you to add a custom require_relative at the top of the formula template
    # Default is empty
    # custom_require: custom_download_strategy

    # Git author used to commit to the repository.
    # Defaults are shown.
    commit_author:
      name: p-rs
      email: jpersinger@zendesk.com

    # Folder inside the repository to put the formula.
    # Default is the root folder.
    folder: formula

    # Caveats for the user of your binary.
    # Default is empty.
    # caveats: "How to use this binary"

    # Your app's homepage.
    # Default is empty.
    # homepage: "https://example.com/"

    # Your app's description.
    # Default is empty.
    description: "Escape Regex Metacharacters, made in Go."

    # Setting this will prevent goreleaser to actually try to commit the updated
    # formula - instead, the formula file will be stored on the dist folder only,
    # leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    # Default is false.
    # skip_upload: true

    # Custom block for brew.
    # Can be used to specify alternate downloads for devel or head releases.
    # Default is empty.
    # custom_block: |
    #   head "https://github.com/some/package.git"
    #   ...

    # Packages your package depends on.
    # dependencies:
    #   - name: git
    #   - name: zsh
    #     type: optional

    # Packages that conflict with your package.
    # conflicts:
    #   - svn
    #   - bash

    # Specify for packages that run as a service.
    # Default is empty.
    # plist: |
    #   <?xml version="1.0" encoding="UTF-8"?>
    #   ...

    # So you can `brew test` your formula.
    # Default is empty.
    # test: |
    #   system "#{bin}/program --version"
    #  ...

    # Custom install script for brew.
    # Default is 'bin.install "program"'.
    # install: |
    #   bin.install "program"
    #   ...

scoop:
  # Template for the url which is determined by the given Token (github or gitlab)
  # Default for github is "https://github.com/<repo_owner>/<repo_name>/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
  # Default for gitlab is "https://gitlab.com/<repo_owner>/<repo_name>/uploads/{{ .ArtifactUploadHash }}/{{ .ArtifactName }}"
  # Gitea is not supported yet, but the support coming
  url_template: "https://github.com/p-rs/eschargo/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

  # Repository to push the app manifest to.
  bucket:
    owner: p-rs
    name: eschargo-scoop-bucket
    # Optionally a token can be provided, if it differs from the token provided to GoReleaser
    # token: "{{ secrets.GO_RELEASER_GITHUB_TOKEN }}"

  # Git author used to commit to the repository.
  # Defaults are shown.
  commit_author:
    name: p-rs
    email: jpersinger@zendesk.com

  # The project name and current git tag are used in the format string.
  commit_msg_template: "Scoop update for {{ .ProjectName }} version {{ .Tag }}"

  # Your app's homepage.
  # Default is empty.
  # homepage: "https://example.com/"

  # Your app's description.
  # Default is empty.
  description: "Escape Regex Metacharacters, made in Go."

  # Your app's license
  # Default is empty.
  license: MIT

  # Persist data between application updates
  # persist:
  # - "data"
  # - "config.toml"